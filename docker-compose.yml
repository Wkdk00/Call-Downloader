networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - '/etc/letsencrypt:/etc/letsencrypt'
    depends_on:
      - backend
      - frontend
    networks:
      - dev

  backend:
    build:
      context: ./backend
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - dev
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    networks:
      - dev

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - dev

  rabbitmq:
    image: rabbitmq:alpine
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5672:5672"
    networks:
      - dev

  pg:
    image: postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: autooptcall
      POSTGRES_PASSWORD: autooptcall
    ports:
      - "5432:5432"
    networks:
      - dev

  prometheus:
    image: prom/prometheus:v2.43.0
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - dev
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafanadata:/var/lib/grafana
    networks:
      - dev

volumes:
  prometheusdata:
  grafanadata: